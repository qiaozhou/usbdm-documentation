/*!
 \page eclipseFlashProgrammingPage Setting up Coldfire V2-V4 Flash programming for Codewarrior Eclipse

USBDM does not support the automatic programming of Coldfire V2 - V4 devices as the programming algorithms
required are too varied between different devices.  This situation is no different from the arrangement 
that applies to the other Codewarrior supported BDM interfaces.\n

Codewarrior Eclipse allows the creation of Flash programming tasks which may then be automatically executed 
prior to debugging a device.  The following describes the setting up of a such a task for a MCF52235.\n

Codewarrior will usually have already set up a suitable Flash Programming task for Coldfire V2-V4 devices when the 
project was created so the following should only be necessary in rare circumstances.\n

 \section EclipseFlashConfiguration Creating a Flash Programming Task for USBDM
 
<table border="0">
   <tr>
      <td> Open the Flash Programmer as shown: </td>
      <td> \image html "Flash_Programming_Task_0.png" </td>
   </tr>
</table>
<table border="0">
   <tr>
      <td> Click on the Green Plus to add a new task</td>
      <td> \image html "Flash_Programming_Task_0a.png" </td>
   </tr>
</table>
<table border="0">
   <tr>
      <td> Choose a suitable name for the Task and complete the required details. 
            - <b>Run Configuration</b> - Associate with the current task
            - <b>Task Type</b> - Choose the CFV234 Flash Programmer
      </td>
      <td> \image html "Flash_Programming_Task_1.png" </td>
   </tr>
</table>
<table border="0">
   <tr>
      <td> The dialogue that open allows the selection of target device and the necessary Flash programming
           Actions to be scheduled as a sequence of steps that will be automatically carried out. 
      </td>
      <td> \image html "Flash_Programming_Task_2.png" </td>
   </tr>
</table>
<table border="0">
   <tr>
      <td> Click on the <b>Add Device</b> button and choose the device type to be programmed.\n
           You can type a partial device type to reduce the number of alternatives displayed. \n\n
           Click <b>Done</b> to close this dialogue when finished.</td>
      <td> \image html "Flash_Programming_Task_3.png" </td>
   </tr>
</table>
Click on the <b>Add Erase/Black Check Action</b>\n
<table border="0">
   <tr>
      <td> 
          - Select <b>Erase All Sectors Using Chip Erase Command</b> checkbox so that actions are applied to the entire Flash.
          - Click on <b>Add Erase Action</b> button to do a mass erase of the device.\n
          - Click on <b>Add Blank Check Action</b> button to add a check for successful erasure.\n\n
           Click <b>Done</b> to close this dialogue when finished.</td>
      <td> \image html "Flash_Programming_Task_4.png" </td>
   </tr>
</table>
Click on the <b>Add Program/Verify Action</b>\n
<table border="0">
   <tr>
      <td> 
          - Select <b>Use File From Launch Configuration</b> checkbox so that target intialisation 
            settings will be taken from the associated debugging Launch Configuration.
          - Click on <b>Add Program Action</b> button to program the device.\n
          - Click on <b>Add Verify Action</b> button to add a programming verification.\n\n
           Click <b>Done</b> to close this dialogue when finished.</td>
      <td> \image html "Flash_Programming_Task_5.png" </td>
   </tr>
</table>
<table border="0">
   <tr>
      <td> The final step in setting up the Flash programmer is determining a suitable location for the <b>Target RAM</b> buffer required to 
           hold the Flash Programming code and Flash data buffer.  Unfortunately on the Coldfire chips this is movable and depends 
           upon how the target is configured.\n\n
           The easiest way (that I've found) to determine a suitable location is to inspect the linker configuration for the
           <b>project being debugged</b>.\n\n
           Look under <i><b>Project_Settings/Linker_Files</b></i> for the appropriate <b>.lcf</b>
           file, in this case <i>MCF52232_Internal_Flash.lcf</i>.\n\n
           Look for the Memory section as shown and note the settings for the two (RWX) sections.  You can choose a suitable
           RAM buffer from these two.  In this case I've used all the available RAM from the start of the first section 0x20000000
           for the combined size of 0x8000 since the two sections are contiguous.    
      </td>
      <td> \image html "Flash_Programming_Task_7.png" </td>
   </tr>
</table>
         
*/  