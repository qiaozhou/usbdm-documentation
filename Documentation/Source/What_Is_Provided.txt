/*!
 \page whatIsProvided What is Provided

 \section A Installation Program (Windows only)
   <b>usbdm.msi</b> - This is a installation package for windows.  It may be used to install the following:
   - USBDM Patches for Codewarrior tools <b>(Only the latest of the given versions of each is detected and installed.)</b>
      - Codewarrior V10.1 or 10.2 (Eclipse version)
      - Codewarrior Development Studio for HCS12(X) V5.1
      - CW for Microcontrollers V6.3 (RS08 is not supported)
      - CW for Coldfire V7.1 
      - CodeWarrior for DSC56800E v8.3
   - USBDM Programmers
      - ARM (Kinetis)
      - Coldfire V1 & V1+
      - Coldfire V2,3,4
      - HCS08
      - HCS12
      - RS08
   - Firmware updater for BDM
      - Firmware files for above
   - Coldfire V2,3,4 JTAG Unlocker
   - USBDM TCL Interpreter (Command line tool)
   - Manuals
   - Driver folder
   
\section B Other Files

<b>Release DLLs folder</b> \n
   This sub folder contains the various driver files.  There is an installation command file provided to install most of these.  
   See the installion section for more discussion.
   -  usbdm.X.dll \n
      This is base level DLL for USBDM.  It is required for all targets and versions. 
   -  tbdml.dll\n
      This is a modified DLL for "CodeWarrior Development Studio for S12(X)". Used for HCS12 Targets. \n
   -  opensourcebdm.dll \n
      This is a modified DLL for "CodeWarrior Development Studio for Microcontrollers".  Used for HCS08/CFV1 Targets.\n
   -  usbdm-cfvx-gdi-legacy.dll
      GDI file for CodeWarrior for Coldfire.\n
   -  usbdm-dsc-gdi-legacy.dll
      GDI file for CodeWarrior for DSC56800E.\n
   -  usbdm-cfv1-gdi.dll, usbdm-cfvx-gdi.dll, usbdm-hcs08-gdi.dll, usbdm-rs08-gdi.dll \n
      GDI files for the Eclipse version of Codewarrior.\n
   -  libusb-1.0.dll\n
      LIBUSB-V1 DLL for accessing USB devices.  This is a thin interface to the MS Winusb kernel level driver.  Changing
      to this driver should ensure good future portability on both Windows and Linux. This is required for all targets.
   -  libxerces-c-3-1.dll
      DLL for parsing XML file in C

      The original tbdml.dll and opensourcebdm.dll files are located in the windows directory (I think).  When installed correctly these versions 
      hides the original version.  This allows easy un-installation - just delete or rename the added file.

<b>Debug DLLs folder</b> \n
   This contains debug versions of the above DLLs.  These create copious log files in the $APPDATA/usbdm directory and are slower
   than the release versions. <i>Not for general use!</i>
	
<b>USBDM_Flash_Images folder</b> \n
   This folder contains pre-compiled firmware images for programming the JMxx/JS16 Flash.  PDF are also provided to aid in the
   identification of the corresponding hardware.

<b>USB_Driver folder</b> \n
   libUSB1.0 installation program.
   This folder is no longer provided.\n
   Please download the current version of the libusb1.0 driver installation program from 
   @htmlonly <a href="http://libusb.org/wiki/windows_backend#DriverInstallation">Windows Backend - libusb</a> @endhtmlonly 
   or using the direct link (at this time) 
   @htmlonly <a href="http://libusb-winusb-wip.googlecode.com/files/zadig.exe">zadig.exe</a>. @endhtmlonly \n

<b>Utilities folder</b> \n
   - XXXX_devices.xml & usbdmDeviceSchema.dtd\n
   These are device description files for the programming features of USBDM (needed for Codewarrior Eclipse DLLs and stand-alone programmers).
         
   - Test_USBDM.exe \n
   This is a simple command line programs that allows the USBDM hardware to be exercised.  It is mostly provided for
   debugging the hardware. Not usable with DSC devices

   - Setboot.exe \n
   This command line executable can be used to place the programmed BDM module into ICP mode for re-programming. This is 
   unlikely to be needed.   This is only usable after initial programming of the module.

   - Bootloader.exe \n
   This GUI program can be used to update or change the BDM firmware on JS16/JMxx BDMs. This utility also allows the serial 
   number to be changed from the default value.  Doing this is very desirable if you have more than one BDM.

   - CFUnlocker.exe\n
   This GUI program can be used to unlock Coldfire V2,3 & 4 devices.  It makes use of the JTAG interface on the target.  
   Not all devices are supported at the moment.  However, additional devices may be added by the user providing the required
   unlocking information is known.

   - CFV1_FlashProgrammer.exe \n
   Programmers for Coldfire V1 targets

   - HCS08_FlashProgrammer.exe \n
   Programmers for HCS08 targets

   - RS08_FlashProgrammer.exe \n
   Programmers for RS08 targets
   
 \section B PCB folder
   This folder contains the files necessary to produce the USBDM hardware
   -  Gerber files for the SMT-PTH board
   -  Bill of materials
   -  Schematic & assembly layouts

 \section C Source folder
   This contains the sources for the software (above DLLs and Firmware).
   
 \subsection EclipseFiles Eclipse Archive Files
   - <b>The following files are archives exported from Eclipse CDT for windows.</b> \n
   To rebuild these projects you will need the following:
      - <b>Eclipse CDT</b>  \n This is C development environment for the Eclipse IDE. CDT may be obtained from http://www.eclipse.org/cdt/
      - <b>MinGW - Minimalist GNU for Windows</b> \n  This provides the C development tools (e.g. Compiler, linkers etc.) required for the
           windows platform.  These are used with the Eclipse IDE on a windows platform. These tools may be obtained from http://www.mingw.org/
      - <b>Doxygen</b> \n This is a tool for producing documention directly from suitably annotated code.  The source code files have
           been extensively commented in this fashion. This tool may be obtained from http://www.stack.nl/~dimitri/doxygen/.
      - <b>eclox</b> \n This is a plugin for Eclipse that allows the convenient use of Doxygen from within Eclipse.  This plugin may
           be obtained from http://eclox.eu/
         
   -  <b>USBDM_Win32_xxxx.zip</b> \n
      - Source for the all DLL and executables. \n
      - Documentation source files used to generate help files etc.\n
      - HextoC \n
      Source for the conversion program used to convert S1S9 records into a C array for incorporation in the driver DLLs.
      This is used to embed the BDM Firmware images in the interface DLLs.  This allows
      automatic update of the JMxx version BDM firmware.
      
 \subsection CodeWarrior Codewarrior Projects
   <b>The following files are simple archives of Freescale Codewarrior for Microcontrollers V6.2 projects.</b> \n
   
   -  <b>USBDM_JMxx_xxxx.zip</b> \n
      Source for the firmware.  This is a simple Zip file of the Codewarrior V10 project.  Documentation for the C files
      may be generated with doxygen.
\if RS08
   -  <b>Flash_Programming_Routines.rar</b> \n
      This is the source code for the Flash programming routines that are downloaded to the various targets
      by the BDM when programming the on-chip Flash memory.
\endif
      
 \subsection OtherFiles Other Files
   -  <b>BDM Timing.xls</b> \n
      This spreadsheet was used to calculate the timing for the bdm_rx() and bdm_tx() routines. 
*/